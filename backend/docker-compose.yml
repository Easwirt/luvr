version: '3.9'

services:
  discovery_service:
    container_name: discovery-service
    build:
      context: discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE={EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      - PORT=8761
    env_file:
      - .env
    networks:
        - luvr

  user_service:
    container_name: user-service
    build: 
      context: user-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
    depends_on:
      - postgresql
      - discovery_service
    env_file:
      - .env
    networks:
        - luvr

  api-gateway:
    container_name: api-gateway
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
    environment:
        - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      - discovery_service
    env_file:
      - .env
    networks:
        - luvr

  postgresql:
    image: postgres:15
    container_name: luvr-postgresql
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - luvr

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - luvr
    command:
      - "start-dev"
    depends_on:
      - postgresql

volumes:
  pg_data:

networks:
  luvr:
    driver: bridge
